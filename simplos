#!/usr/bin/env bash

BAUD=115200

if [[ $# -ne 1 ]]; then
  echo "Please supply a parameter of {build, flash, sim, debug, rebuild_container ,clean}."
  exit
fi

uP="atmega2560"

case $1 in
scons)
  sudo docker run -it --rm --mount type=bind,source=$PWD/src,target=/build avr_docker scons baud=$BAUD debug
  avr-size --mcu=$uP -C src/simplos.out
  ;;
build)
  sudo docker run -it --rm --mount type=bind,source=$PWD/src,target=/build avr_docker scons baud=$BAUD
  avr-size --mcu=$uP -C src/simplos.out
  ;;

flash)
  sudo docker run -it --rm --mount type=bind,source=$PWD/src,target=/build avr_docker scons baud=$BAUD
  BAUD=115200
  avr-size --mcu=$uP -C src/simplos.out
  avr-objcopy -O ihex -R .eeprom src/simplos.out out.hex
  avrdude -C /usr/share/arduino/hardware/tools/avrdude.conf -c wiring \
    -p $uP \
    -D -P /dev/ttyUSB0 \
    -b $BAUD \
    -U flash:w:out.hex \
    /
  ;;

sim)
  sudo docker run -it --rm --mount type=bind,source=$PWD/src,target=/build avr_docker scons baud=$BAUD debug=1
  simavr -g -m $uP src/simplos.out
  ;;

debug)
  avr-gdb src/simplos.out -ex "target remote :1234" -ex "directory src/"
  ;;

rebuild_container)
  sudo docker build --rm -t avr_docker \
    --build-arg USER_ID=$(id -u) \
    --build-arg GROUP_ID=$(id -g) .
  ;;

clean)
  rm -f src/*.o
  rm -f src/*.hex
  ;;

esac
